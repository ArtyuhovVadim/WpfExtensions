<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="clr-namespace:WpfExtensions.Controls.Resources.Brushes">
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="templateRoot"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Border
                            x:Name="splitBorder"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            BorderThickness="0"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                            <Path
                                x:Name="arrow"
                                Height="4"
                                Margin="5"
                                Data="M 0 0 L 3 3 L 6 0 z"
                                Fill="{DynamicResource {x:Static b:BrushesKeys+ComboBox.IconBrush}}"
                                IsHitTestVisible="False"
                                Stretch="Uniform" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource {x:Static b:BrushesKeys+ComboBox.MouseOverBackground}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=IsKeyboardFocusWithin}" Value="True">
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource {x:Static b:BrushesKeys+ComboBox.FocusedBorderBrush}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="DefaultComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup
                x:Name="PART_Popup"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen,
                                 Mode=TwoWay,
                                 RelativeSource={RelativeSource Mode=TemplatedParent}}"
                Placement="Bottom"
                PlacementTarget="{Binding ElementName=toggleButton}">
                <Border
                    x:Name="dropDownBorder"
                    MinWidth="{Binding ActualWidth,
                                       ElementName=templateRoot}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Background="{DynamicResource {x:Static b:BrushesKeys+ComboBox.PopupBackground}}"
                    BorderBrush="{DynamicResource {x:Static b:BrushesKeys+ComboBox.PopupBorderBrush}}"
                    BorderThickness="1">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas
                                x:Name="canvas"
                                Width="0"
                                Height="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top">
                                <Rectangle
                                    x:Name="opaqueRect"
                                    Width="{Binding ActualWidth,
                                                    ElementName=dropDownBorder}"
                                    Height="{Binding ActualHeight,
                                                     ElementName=dropDownBorder}"
                                    Fill="{Binding Background,
                                                   ElementName=dropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter
                                x:Name="ItemsPresenter"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton
                x:Name="toggleButton"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen,
                                    Mode=TwoWay,
                                    RelativeSource={RelativeSource Mode=TemplatedParent}}"
                Style="{StaticResource ComboBoxToggleButton}" />
            <ContentPresenter
                x:Name="contentPresenter"
                Grid.Column="0"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding SelectionBoxItem}"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                IsHitTestVisible="false"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup
                x:Name="PART_Popup"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen,
                                 RelativeSource={RelativeSource Mode=TemplatedParent}}"
                Placement="Bottom"
                PlacementTarget="{Binding ElementName=toggleButton}">
                <Border
                    x:Name="dropDownBorder"
                    MinWidth="{Binding ActualWidth,
                                       ElementName=templateRoot}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Background="{DynamicResource {x:Static b:BrushesKeys+ComboBox.PopupBackground}}"
                    BorderBrush="{DynamicResource {x:Static b:BrushesKeys+ComboBox.PopupBorderBrush}}"
                    BorderThickness="1">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas
                                x:Name="canvas"
                                Width="0"
                                Height="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top">
                                <Rectangle
                                    x:Name="opaqueRect"
                                    Width="{Binding ActualWidth,
                                                    ElementName=dropDownBorder}"
                                    Height="{Binding ActualHeight,
                                                     ElementName=dropDownBorder}"
                                    Fill="{Binding Background,
                                                   ElementName=dropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter
                                x:Name="ItemsPresenter"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton
                x:Name="toggleButton"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen,
                                    Mode=TwoWay,
                                    RelativeSource={RelativeSource Mode=TemplatedParent}}"
                Style="{StaticResource ComboBoxToggleButton}" />
            <TextBox
                x:Name="PART_EditableTextBox"
                Grid.Column="0"
                Margin="{TemplateBinding Padding}"
                Padding="-2,0,0,0"
                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                Background="Transparent"
                BorderThickness="0"
                IsReadOnly="{Binding IsReadOnly,
                                     RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_EditableTextBox" Property="IsMouseOver" Value="True">
                <Setter TargetName="toggleButton" Property="Background" Value="{DynamicResource {x:Static b:BrushesKeys+ComboBox.MouseOverBackground}}" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxItemContainerStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border
                        x:Name="Border"
                        Padding="4,2"
                        SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static b:BrushesKeys+ComboBox.ItemHighlightBrush}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static b:BrushesKeys+ComboBox.Background}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static b:BrushesKeys+ComboBox.BorderBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static b:BrushesKeys+ComboBox.Foreground}}" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="5,3" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{StaticResource DefaultComboBoxTemplate}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemContainerStyle}" />
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>