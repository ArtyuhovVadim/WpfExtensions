<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="clr-namespace:WpfExtensions.Controls.Styles.Brushes">
    <ContextMenu x:Key="PasswordBoxContextMenu">
        <MenuItem Command="ApplicationCommands.Cut" />
        <MenuItem Command="ApplicationCommands.Copy" />
        <MenuItem Command="ApplicationCommands.Paste" />
    </ContextMenu>

    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="PasswordChar" Value="●" />
        <Setter Property="Background" Value="{DynamicResource {x:Static b:BrushesKeys+PasswordBox.Background}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static b:BrushesKeys+PasswordBox.Foreground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static b:BrushesKeys+PasswordBox.BorderBrush}}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static b:BrushesKeys+PasswordBox.SelectionBrush}}" />
        <Setter Property="CaretBrush" Value="{DynamicResource {x:Static b:BrushesKeys+PasswordBox.CaretBrush}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ContextMenu" Value="{StaticResource PasswordBoxContextMenu}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="SelectionOpacity" Value="0.4" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource {x:Static b:BrushesKeys+PasswordBox.DisabledBackground}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static b:BrushesKeys+PasswordBox.DisabledForeground}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static b:BrushesKeys+PasswordBox.DisabledBorderBrush}}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static b:BrushesKeys+PasswordBox.FocusedBorderBrush}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="Transparent" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>